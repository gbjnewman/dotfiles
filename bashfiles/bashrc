# ~/.bashrc: executed by bash(1) for non-login shells.
# see /usr/share/doc/bash/examples/startup-files (in the package bash-doc)
# for examples

# If not running interactively, don't do anything
case $- in
    *i*) ;;
      *) return;;
esac

HISTCONTROL=ignoreboth # don't put duplicate lines or lines starting with space in the history.

shopt -s histappend # append to the history file, don't overwrite it

# for setting history length see HISTSIZE and HISTFILESIZE in bash(1)
HISTSIZE=5000
HISTFILESIZE=10000

set -o vi # set vi mode

# check the window size after each command and, if necessary,
# update the values of LINES and COLUMNS.
shopt -s checkwinsize

# If set, the pattern "**" used in a pathname expansion context will
# match all files and zero or more directories and subdirectories.
#shopt -s globstar

# make less more friendly for non-text input files, see lesspipe(1)
[ -x /usr/bin/lesspipe ] && eval "$(SHELL=/bin/sh lesspipe)"

# set variable identifying the chroot you work in (used in the prompt below)
if [ -z "${debian_chroot:-}" ] && [ -r /etc/debian_chroot ]; then
    debian_chroot=$(cat /etc/debian_chroot)
fi

# set a fancy prompt (non-color, unless we know we "want" color)
case "$TERM" in
    xterm-color|*-256color) color_prompt=yes;;
esac

# CUSTOM PROMPT
my_prompt=''

# if SSH session
# add ip address and change color to ip and hostname to red if connected to session via SSH
if [ -n "$SSH_CONNECTION" ]; then

	# ssh session banner
	my_prompt+="\[\033[4;38;5;197m\]" #color
	my_prompt+="(ssh session)"
	my_prompt+="\[$(tput sgr0)\]" #end color

	# username
	my_prompt+="\[\033[38;5;7m\]" #color
	my_prompt+=" \u@"
	my_prompt+="\[$(tput sgr0)\]" #end color

	# hostname
	my_prompt+="\[\033[38;5;7m\]" #color
	my_prompt+="\h"
	my_prompt+="\[$(tput sgr0)\]" #end color

	# ip address
	my_prompt+="\[\033[38;5;7m\]" #color
	my_prompt+=" ($(
			ip -4 addr show scope global | 
			awk "/inet / {print \$2}" | 
			cut -d/ -f1 | 
			head -n 1
			))"
	my_prompt+="\[$(tput sgr0)\]" #end color

	# newline
	my_prompt+="\n"

	# working directory
	my_prompt+="\[\033[38;5;6m\]" #color
	my_prompt+="\w "
	my_prompt+="\[$(tput sgr0)\]" #end color

else

	# username
	my_prompt+="\[\033[38;5;6m\]" #color
	my_prompt+="\u@" # no space in front of @
	my_prompt+="\[$(tput sgr0)\]" #end color

	# hostname
	my_prompt+="\[\033[38;5;2m\]" #color
	my_prompt+="\h"
	my_prompt+="\[$(tput sgr0)\]" #end color

	# working directory
	my_prompt+="\[\033[38;5;6m\]" #color
	my_prompt+=":\w "
	my_prompt+="\[$(tput sgr0)\]" #end color

fi

# git branch
my_prompt+="\[\033[38;5;197m\]" #color
my_prompt+="\$(git branch 2> /dev/null | sed -e '/^[^*]/d' -e 's/* \(.*\)/(\1)/') "
my_prompt+="\[$(tput sgr0)\]" #end color

# newline
my_prompt+="\n"

# prompty symbol
my_prompt+="\[\033[38;5;6m\]" #color
my_prompt+="\$"
my_prompt+="\[$(tput sgr0)\]" #end color

# export PS1=$my_prompt

# uncomment for a colored prompt, if the terminal has the capability; turned
# off by default to not distract the user: the focus in a terminal window
# should be on the output of commands, not on the prompt
force_color_prompt=yes

if [ -n "$force_color_prompt" ]; then
    if [ -x /usr/bin/tput ] && tput setaf 1 >&/dev/null; then
	# We have color support; assume it's compliant with Ecma-48
	# (ISO/IEC-6429). (Lack of such support is extremely rare, and such
	# a case would tend to support setf rather than setaf.)
	color_prompt=yes
    else
	color_prompt=
    fi
fi

if [ "$color_prompt" = yes ]; then
#   PS1='${debian_chroot:+($debian_chroot)}\[\033[01;32m\]\u@\h\[\033[00m\]:\[\033[01;34m\]\w\[\033[00m\]\$ '
    PS1=$my_prompt
else
    PS1='${debian_chroot:+($debian_chroot)}\u@\h:\w\$ '
fi
unset color_prompt force_color_prompt

# If this is an xterm set the title to user@host:dir
case "$TERM" in
xterm*|rxvt*)
    PS1="\[\e]0;${debian_chroot:+($debian_chroot)}\u@\h: \w\a\]$PS1"
    ;;
*)
    ;;
esac


# enable color support of ls and also add handy aliases
if [ -x /usr/bin/dircolors ]; then
    test -r ~/.dircolors && eval "$(dircolors -b ~/.dircolors)" || eval "$(dircolors -b)"
    alias ls='ls --color=auto'
    alias dir='dir --color=auto'
    alias vdir='vdir --color=auto'

    alias grep='grep --color=auto'
    alias fgrep='fgrep --color=auto'
    alias egrep='egrep --color=auto'
fi

# colored GCC warnings and errors
#export GCC_COLORS='error=01;31:warning=01;35:note=01;36:caret=01;32:locus=01:quote=01'


# Add an "alert" alias for long running commands.  Use like so:
#   sleep 10; alert
alias alert='notify-send --urgency=low -i "$([ $? = 0 ] && echo terminal || echo error)" "$(history|tail -n1|sed -e '\''s/^\s*[0-9]\+\s*//;s/[;&|]\s*alert$//'\'')"'

# Alias definitions.
# You may want to put all your additions into a separate file like
# ~/.bash_aliases, instead of adding them here directly.
# See /usr/share/doc/bash-doc/examples in the bash-doc package.

if [ -f ~/.bash_aliases ]; then
    . ~/.bash_aliases
fi

alias ll='ls -alF'
alias lll='ls -l'
alias la='ls -A'
alias l='ls -CF'
alias scripts='cd $HOME/repos/github/scripts/'
alias vimrc_edit='vim $HOME/repos/github/dotfiles/vimfiles/vim/vimrc'
alias path='echo -e "${PATH//:/\\n}"'
alias cdcmur='cd $HOME/repos/github/cmuratori-computer_enhance/perfaware/part1/'
alias cdsim='cd $HOME/repos/github/sim8086/'
alias cddot='cd $HOME/repos/github/dotfiles/'

# enable programmable completion features (you don't need to enable
# this, if it's already enabled in /etc/bash.bashrc and /etc/profile
# sources /etc/bash.bashrc).
if ! shopt -oq posix; then
  if [ -f /usr/share/bash-completion/bash_completion ]; then
    . /usr/share/bash-completion/bash_completion
  elif [ -f /etc/bash_completion ]; then
    . /etc/bash_completion
  fi
fi

# #############################################################
# END OF BASHRC
